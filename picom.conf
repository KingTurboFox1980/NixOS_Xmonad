animations=true;

#################################
#             Corners           #
#################################
corner-radius = 12; # Slightly increased for smoother rounded corners
round-borders = 2;  # Adds a subtle border rounding effect

rounded-corners-exclude = [
  "class_g = 'awesome'",
  "class_g = 'URxvt'",
  "class_g = '.virt-manager-wrapped'",
  "class_g = 'kitty'",
  "class_g = 'Vivaldi-stable'",
  "class_g = 'Polybar'",
  "class_g = 'Code'",
  "class_g = 'qBittorrent'",
  "class_g = 'Thunar'",
  "window_type = 'toolbar'", # Exclude toolbar elements
  "window_type = 'desktop'", # Prevent unnecessary rounding on desktop
];

round-borders-exclude = [
  "class_g = 'TelegramDesktop'",
  "class_g = 'Firefox'",
  "class_g = 'Conky'",
  "class_g = 'Xfce4-terminal'", # Exclude Xfce terminal for better readability
];

#################################
#       Shadow Enhancements     #
#################################

shadow = true;
shadow-opacity = 0.75;
shadow-radius = 10;
shadow-offset-x = -10;
shadow-offset-y = -10;
shadow-exclude = [
  "class_g = 'polybar'",
  "class_g = 'dmenu'",
  "_NET_WM_STATE@:32a = '_NET_WM_STATE_HIDDEN'"
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = ""

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################
fading = true;
fade-in-step = 0.05;  # Slower fade-in for smoother entrance
fade-out-step = 0.07; # Slightly quicker fade-out for snappier transitions
fade-delta = 12; # Reduces delay for faster fade responsiveness
detect-client-opacity = true;
active-opacity = 1;
inactive-dim = 0.35; # Keeps inactive windows slightly dim without overpowering
inactive-opacity = 0.75; # Smooth adjustment to inactive transparency

#################################
#      Expanded Exclusions      #
#################################
fade-exclude = [
  "class_g = 'polybar'",  # Prevents unnecessary fading on status bars
  "class_g = 'dmenu'",     
  "class_g = 'missioncenter'",   
  "window_type = 'tooltip'",
  "class_g = 'rofi'", # Keeps rofi menus snappy
  "_NET_WM_STATE@:32a = '_NET_WM_STATE_HIDDEN'" # Excludes hidden/minimized windows
];


#################################
#   Transparency / Opacity      #
#################################
inactive-opacity = 0.8;
frame-opacity = 0.7;
inactive-opacity-override = true;
active-opacity = 1.0;

focus-exclude = [
  "class_g = 'Polybar'",
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",  # lemonbar
  "class_g = 'slop'",  # maim
  "class_i = 'Toolkit'",  # Firefox PIP
  "class_g = 'zoom'"
];

opacity-rule = [
  "90:window_type = 'dock'",   
  "80:class_g = 'Bar'",  # lemonbar
  "95:class_g = 'Neohtop'",
  "95:class_g = 'Org.gnome.Evolution'",
  "95:class_g = 'kitty' && focused",
  "90:class_g = 'kitty' && !focused",
  "90:class_g = 'dmenu'",
  "95:class_g = 'Thunar' && focused",
  "75:class_g = 'Thunar' && !focused",
  "90:class_g = 'Polybar'",
  "90:class_g = 'Xfce4-terminal'",
  "97:class_g = 'missioncenter'",
  "100:class_g = 'code'",
  "100:class_g = 'Vivaldi-stable'",
  "95:class_g = 'rclone-browser'",
  "75:class_g = 'dmenu_run'",
  "95:class_g = 'qBittorrent'",
  "85:class_g = 'rofi'",
];

#################################
#     Background Blurring       #
#################################
blur-background = true;
blur-background-frame = true;
blur-background-fixed = true;
blur: {
  method = "kernel";
  strength = 30;
  kernel = "7x7box";
  deviation = 50;
  background = true;
  background-frame = true;
  background-fixed = true;
}

blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'URxvt'",
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'alacritty'"  # Prevent blur on Alacritty for readability
];

#################################
#      Animation Enhancements   #
#################################
animations = true;
transition-length = 300;
transition-pow-x = 0.2;
transition-pow-y = 0.2;
transition-pow-w = 0.15;
transition-pow-h = 0.15;
size-transition = true;
animation-clamp = true;
animation-stiffness = 180;
animation-window-shadow = false;

animation-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'Firefox'",
  "_NET_WM_STATE@:32a = '_NET_WM_STATE_HIDDEN'"
];

#################################
#       Performance Tweaks      #
#################################
shadow-exclude = [
  "name = 'polybar'",  # Avoid shadows around Polybar
  "name = 'dmenu'",
  "class_g = 'Conky'"  # Conky transparency works better without blur interference
];

refresh-rate = 120;
vsync = true;
use-damage = false;  # Avoid screen tearing while improving performance
glx-no-stencil = true;  # Optimize GLX rendering for smoother transitions
glx-no-rebind-pixmap = true;  # Improve performance during window updates


#################################
#       Window Animations       #
#################################
animation-open-effect = "zoom"  # Expanding animation for newly opened windows
animation-close-effect = "slide-down"  # Closing animation effect (can be fade-out, shrink, etc.)
animation-move-effect = "slide"  # Smooth sliding effect for moving windows
animation-resize-effect = "grow-shrink"  # Resize animation effect (for smoother UI adjustments)
animation-stiffness = 180  # Controls how "snappy" animations feel (lower = smoother, higher = faster)

#################################
#       Performance Tweaks      #
#################################
animation-clamp = true  # Prevents excessive stretching during transitions
animation-window-shadow = false  # Disables shadow animations (can improve performance)

#################################
#        Animation Exclusions   #
#################################
animation-exclude = [
  "window_type = 'dock'",  # Prevents animations on docks (Polybar, etc.)
  "window_type = 'desktop'",  # No animations for desktop elements
  "class_g = 'dmenu'",  # Keeps dmenu snappy by excluding animations
  "class_g = 'firefox'",  # Avoid animations for Firefox windows
  "_NET_WM_STATE@:32a = '_NET_WM_STATE_HIDDEN'"  # Exclude hidden/minimized windows
]

#################################
#          Window Detection     #
#################################

mark-wmwin-focused = true;  # Improve window focus detection
mark-ovredir-focused = false;  # False for XMonad
detect-rounded-corners = true;  # Ensure correct rendering of rounded windows
detect-client-opacity = true;  # Improve opacity tracking for apps
detect-transient = true;  # Recognize transient windows correctly

#################################
#       Window Effects          #
#################################

resize-damage = 2;  # Helps fix corruption in blurred windows
glx-no-stencil = true;  # Skip stencil buffer for performance gain
glx-no-rebind-pixmap = true;  # Prevent unnecessary pixmap rebinding

# Enable window dimming when inactive
inactive-opacity = 0.85;
active-opacity = 1;
inactive-dim = 0.3;

#################################
#        Fullscreen Handling    #
#################################

unredir-if-possible = true;  # Improves full-screen performance (set false if flickering occurs)
unredir-if-possible-delay = 100;  # Delay before unredirecting fullscreen apps
unredir-if-possible-exclude = [
  "window_type = 'dialog'",
  "window_type = 'popup_menu'"
];

#################################
#         Blur Effects          #
#################################

blur: {
  method = "kernel";  # Uses convolution-based blur
  strength = 30;  # Higher values improve smoothness
  kernel = "7x7box";  # Soft blur without excessive distortion
  deviation = 50;  # Improves gradient smoothing
  background = true;
  background-frame = true;
  background-fixed = true;
}

blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'URxvt'",
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'Alacritty'"
];

#################################
#       General Settings        #
#################################
# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = false

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
experimental-backends = true;
backend = "glx";

# Enable/disable VSync.
# vsync = false
vsync = true

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
#mark-ovredir-focused = true; ; false for xmonad

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will
# try detecting this with X RandR extension.
#
refresh-rate = 120

# Limit picom to repaint at most once every 1 / 'refresh_rate' second to
# boost performance. This should not be used with 
#   vsync drm/opengl/opengl-oml
# as they essentially does sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
#
# sw-opti =

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy,
# provided that the WM supports it.
#
use-ewmh-active-win = true

# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows. Known to cause flickering
# when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.
#
# unredir-if-possible = false

# Delay before unredirecting the window, in milliseconds. Defaults to 0.
# unredir-if-possible-delay = 0

# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.
# unredir-if-possible-exclude = []

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
#
# detect-transient = false
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if
# detect-transient is enabled, too.
#
# detect-client-leader = false

# Resize damaged region by a specific number of pixels.
# A positive value enlarges it while a negative one shrinks it.
# If the value is positive, those additional pixels will not be actually painted
# to screen, only used in blur calculation, and such. (Due to technical limitations,
# with use-damage, those pixels will still be incorrectly painted to screen.)
# Primarily used to fix the line corruption issues of blur,
# in which case you should use the blur radius value here
# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`,
# with a 5x5 one you use `--resize-damage 2`, and so on).
# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.
#
resize-damage = 1

# Specify a list of conditions of windows that should be painted with inverted color.
# Resource-hogging, and is not well tested.
#
# invert-color-include = []

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never
# practically happened) and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
#
glx-no-stencil = true

# GLX backend: Avoid rebinding pixmap on window damage. 
# Probably could improve performance on rapid window content changes, 
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
glx-no-rebind-pixmap = true

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
use-damage = false

# Use X Sync fence to sync clients' draw calls, to make sure all draw
# calls are finished before picom starts drawing. Needed on nvidia-drivers
# with GLX backend for some users.
#
# xrender-sync-fence = false

# GLX backend: Use specified GLSL fragment shader for rendering window contents.
# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl`
# in the source tree for examples.
#
# glx-fshader-win = ''

# Force all windows to be painted with blending. Useful if you
# have a glx-fshader-win that could turn opaque pixels transparent.
#
# force-win-blend = false

# Do not use EWMH to detect fullscreen windows.
# Reverts to checking if a window is fullscreen based only on its size and coordinates.
#
# no-ewmh-fullscreen = false

# Dimming bright windows so their brightness doesn't exceed this set value.
# Brightness of a window is estimated by averaging all pixels in the window,
# so this could comes with a performance hit.
# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)
#
# max-brightness = 1.0

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
# transparent-clipping = false

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "info";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr.
# Otherwise, logs will to written to the given file, though some of the early
# logs might still be written to the stderr.
# When setting this option from the config file, it is recommended to use an absolute path.
#
# log-file = '/path/to/your/log/file'

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'

# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes: {
  normal = { 
    fade = false; 
    shadow = false; 
    opacity = 1.0; # Ensure default windows remain fully visible
  };

  menu = { 
    blur-background = false; 
    fade = true;  
    opacity = 0.88; # Slight opacity reduction for cleaner contrast
    shadow = true;  # Adds a subtle shadow for depth effect
  };

  tooltip = { 
    fade = true;  
    shadow = true;  
    opacity = 0.75;  
    focus = true;  
    full-shadow = false;  
    blur-background = true;  
    blur-strength = 30; # Keeps tooltip blur smooth but not excessive
  };

  dock = { 
    blur-background = false;  
    opacity = 0.98; # Keep docks near full opacity for visibility  
    shadow = false;  
  };

  dnd = { 
    shadow = false;  
    opacity = 0.85;  
    blur-background = false; # Prevent blur effects on drag-and-drop elements
  };

  popup_menu = { 
    opacity = 0.75;  
    full-shadow = true;  
    blur-background = true;  
    blur-strength = 40; # Increased depth effect for popups
    blur-kernel = "9x9box";  
  };

  dropdown_menu = { 
    opacity = 0.75;  
    full-shadow = true;  
    blur-background = true;  
    blur-strength = 35; # Matches popup menu effect
  };

  utility = { 
    full-shadow = true;  
    fade = true;  
    opacity = 0.92; # Fine-tuned for smooth transparency
  };

  toolbar = { 
    full-shadow = true;  
    opacity = 0.90;  
    blur-background = false; # Toolbars should remain readable without blur
  };

  notification = { 
    opacity = 1.0;  
    shadow = true;  
    blur-background = true;  
    blur-strength = 45; # Higher blur effect for clean notification contrast
  };
}
